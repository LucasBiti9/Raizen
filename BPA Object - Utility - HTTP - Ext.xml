<process name="Utility - HTTP - Ext" version="6.9.0.26970" bpversion="6.7.2.23806" narrative="Communicates with web services using the HTTP protocol.&#xD;&#xA;ChangeLog &#xD;&#xA;&#xD;&#xA;March 2024 &#xD;&#xA;&#xD;&#xA;Changed exception handler in http webrequest actions to deal with 4xx and 5xx errors rather than just throwing exception. The response will be handled and returned back to Blue Prism. Please check compatibility with your existing applications before moving into production." byrefcollection="true" type="object" runmode="Background" preferredid="65ec75b1-127a-484a-928a-a99395bcd756">
  <appdef>
    <element name="Application Root">
      <id>2ba17e26-49eb-43ed-84dd-c40e67e990b0</id>
      <type>Application</type>
      <basetype>Application</basetype>
      <datatype>unknown</datatype>
      <diagnose>False</diagnose>
    </element>
  </appdef>
  <view>
    <camerax>-141</camerax>
    <cameray>0</cameray>
    <zoom version="2">1.25</zoom>
  </view>
  <preconditions />
  <endpoint narrative="" />
  <subsheet subsheetid="925e0261-2b2e-41ed-b555-4c5ccf8a00fc" type="CleanUp" published="True">
    <name>Clean Up</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="d30e8f45-db72-40d2-9f17-9700006fe152" type="Normal" published="True">
    <name>HTTP Request</name>
    <view>
      <camerax>-325</camerax>
      <cameray>-15</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="74a20e65-147b-4dea-867e-fa08fbea81cb" type="Normal" published="True">
    <name>HTTP Request File</name>
    <view>
      <camerax>0</camerax>
      <cameray>-1</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="701af150-fe0b-4f6b-a823-dc6d09569c09" type="Normal" published="True">
    <name>HTTP Request Multipart</name>
    <view>
      <camerax>-100</camerax>
      <cameray>39</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="f3a55ad6-3bfa-4401-baa9-0e50afe42879" type="Normal" published="True">
    <name>Post</name>
    <view>
      <camerax>-3</camerax>
      <cameray>147</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="ecff5a78-99b1-4ecb-a356-a075c487ef71" type="Normal" published="True">
    <name>Post JSON</name>
    <view>
      <camerax>-61</camerax>
      <cameray>63</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="519a0dc7-b254-478b-b2ed-c7883124e31b" type="Normal" published="True">
    <name>Load Certificate</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="704436d5-f51b-4369-b763-a4fdc6e894c2" type="Normal" published="True">
    <name>URL Encode</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <stage stageid="bee831af-f964-4218-87f3-d3378e2eab10" name="Start" type="Start">
    <loginhibit />
    <display x="15" y="-105" />
    <onsuccess>071f13b7-de3d-4625-9498-9da634d452b4</onsuccess>
  </stage>
  <stage stageid="11e111be-101c-4df7-9d5c-910a10c02e2d" name="End" type="End">
    <loginhibit />
    <display x="15" y="15" />
  </stage>
  <stage stageid="9c4d6f4e-1d32-4d1f-a37d-f279b42fa480" name="Stage1" type="ProcessInfo">
    <display x="-225" y="-60" w="330" h="210" />
    <font family="Segoe UI" size="12" style="Regular" color="000000" />
    <references>
      <reference>System.Data.dll</reference>
      <reference>System.Web.dll</reference>
      <reference>System.Xml.dll</reference>
      <reference>System.Web.dll</reference>
      <reference>Newtonsoft.Json.dll</reference>
      <reference>System.Net.Http.dll</reference>
    </references>
    <imports>
      <import>System</import>
      <import>System.Net</import>
      <import>System.Data</import>
      <import>System.Security.Cryptography.X509Certificates</import>
      <import>System.Collections.Generic</import>
      <import>System.Web</import>
      <import>System.Media</import>
      <import>System.IO</import>
      <import>System.Text</import>
      <import>Newtonsoft.Json</import>
      <import>System.Net.Http.Headers</import>
      <import>Microsoft.VisualBasic</import>
    </imports>
    <language>visualbasic</language>
    <globalcode><![CDATA[

]]></globalcode>
    <code><![CDATA[Private m_Certificates As New Dictionary(Of String, X509Certificate2)

Private Function GetCertificate(ByVal subject As String) As X509Certificate2
	Dim store As New X509Store(StoreName.My, StoreLocation.LocalMachine)
	Try
		store.Open(OpenFlags.ReadOnly)
		Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindBySubjectName, subject, True)
		For Each cert As X509Certificate2 In certs
			Return cert
		Next
	Finally
		store.Close()
	End Try
	Return Nothing
End Function

Function ToDictionary(webResponse As HttpWebResponse ) As Dictionary(Of String, String)

	Dim dict = New Dictionary(Of String, String)()

	For index As Integer = 0 To webResponse.Headers.Count - 1

		If webResponse.Headers.Keys.Count -1 >= index Then

			dict.Add(webResponse.Headers.Keys(index), webResponse.Headers(index) )

		End if

	Next

	Return dict

End Function]]></code>
  </stage>
  <stage stageid="b48af877-43b3-4056-b8b4-88bac82a5c80" name="Clean Up" type="SubSheetInfo">
    <subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid>
    <display x="-195" y="-105" w="150" h="90" />
  </stage>
  <stage stageid="d35cb9b6-000c-45e5-9a29-9001404a21d0" name="Start" type="Start">
    <subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid>
    <loginhibit />
    <display x="15" y="-105" />
    <onsuccess>f1054fe8-46c8-42ab-b236-5b07592ec5eb</onsuccess>
  </stage>
  <stage stageid="f1054fe8-46c8-42ab-b236-5b07592ec5eb" name="End" type="End">
    <subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid>
    <loginhibit />
    <display x="15" y="90" />
  </stage>
  <stage stageid="ab202953-451b-4e7c-8cd5-c050e06e286a" name="Post" type="SubSheetInfo">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <narrative>Sends a message to HTTP endpoint using the POST method. The collection data is encoded using "application/x-www-form-urlencoded"</narrative>
    <display x="-195" y="-105" w="150" h="90" />
  </stage>
  <stage stageid="e2777b38-8eba-4a04-a611-28bcd6c4add6" name="Start" type="Start">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="15" y="-30" />
    <inputs>
      <input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" />
      <input type="collection" name="Post Data" narrative="A collection of values to send as Post data" stage="Post Data" />
      <input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" />
      <input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" />
      <input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" />
      <input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" />
      <input type="collection" name="Headers" narrative="OPTIONAL: HTTP Headers" stage="Headers" />
      <input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" />
      <input type="flag" name="Use Bearer Token" narrative="OPTIONAL: Set this to true if you have been supplied a bearer token." stage="Use Bearer Token" />
      <input type="text" name="Bearer Token" narrative="OPTIONAL: The bearer token supplied for use with the destination you are working with." stage="Bearer Token" />
      <input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" />
      <input type="text" name="User Agent" narrative="OPTIONAL: The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent." stage="UserAgent" />
    </inputs>
    <onsuccess>e42b0caa-40c1-4a89-a873-f6977581053b</onsuccess>
  </stage>
  <stage stageid="f51a79a9-1213-484c-bedc-065f44051a02" name="End" type="End">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="15" y="180" />
    <outputs>
      <output type="text" name="Result" narrative="The result from the Post query." stage="Result" />
      <output type="text" name="Post Headers" narrative="The headers related to the Post query" stage="ResultHeadersJson" />
      <output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" />
    </outputs>
  </stage>
  <stage stageid="14154308-012d-47e4-a707-8ca80b73651e" name="new" type="Note">
    <subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid>
    <narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative>
    <display x="-180" y="60" w="180" h="230" />
  </stage>
  <stage stageid="e42b0caa-40c1-4a89-a873-f6977581053b" name="Get Body" type="Code">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="15" y="45" />
    <inputs>
      <input type="collection" name="postData" expr="[Post Data]" />
    </inputs>
    <outputs>
      <output type="text" name="body" stage="Body" />
    </outputs>
    <onsuccess>e9085eba-5f15-4b65-91ed-41abf7c6917f</onsuccess>
    <code><![CDATA[Dim sb As New System.Text.StringBuilder
For Each r As DataRow In postData.Rows
	Dim first As Boolean = True
	For Each c As DataColumn In postData.Columns
		If first Then
			first = False
		Else
			sb.Append("&")
		End If
		Dim columnName As String = c.ColumnName
		Dim encodedCol As String = System.Web.HttpUtility.UrlEncode(columnName)
		sb.Append(encodedCol)
		sb.Append("=")
		Dim val As String = r(columnName).ToString
		Dim encodedVal As String = System.Web.HttpUtility.UrlEncode(val)
		sb.Append(encodedVal)
	Next
	Exit For 'Only one row is allowed
Next

body=sb.ToString()
]]></code>
  </stage>
  <stage stageid="1c58d0fb-9a9b-4d2f-861f-5c22ab835c31" name="Result" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="285" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b98abed4-9669-476c-87d9-3f485683d049" name="Address URL" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="f4c2a5eb-36de-4904-a963-a8513b7e8840" name="Post Data" type="Collection">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-150" y="-15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="071f13b7-de3d-4625-9498-9da634d452b4" name="Setup" type="Code">
    <loginhibit />
    <display x="15" y="-45" />
    <onsuccess>11e111be-101c-4df7-9d5c-910a10c02e2d</onsuccess>
    <code><![CDATA[System.Net.ServicePointManager.Expect100Continue = False]]></code>
  </stage>
  <stage stageid="f6ed43b3-714e-4161-b44b-b60490592281" name="Proxy Password" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-150" y="45" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="bcedbed1-3ed7-42d7-8f16-7e2071c3e187" name="Proxy Username" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="66afe5b7-37e4-4ed7-a9fc-a78e1ab8890c" name="Proxy URL" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-150" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="be7856fe-4027-4226-8caa-851bb6e7df21" name="Use Proxy" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="15" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="38c313e6-bc0d-49e5-a6ab-4042a0682d3d" name="Post JSON" type="SubSheetInfo">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <narrative>Sends a message to HTTP endpoint using the POST method. The action expects a raw string and sets the content type to "application/json"</narrative>
    <display x="-195" y="-105" w="150" h="90" />
  </stage>
  <stage stageid="37166627-b66b-4a9c-a321-539933de2123" name="End" type="End">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <loginhibit />
    <display x="-15" y="135" />
    <outputs>
      <output type="text" name="Result" narrative="The result from the Post query." stage="Result" />
      <output type="text" name="Result Headers" narrative="The headers related to the Post Query" stage="ResultHeadersJson" />
      <output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" />
    </outputs>
  </stage>
  <stage stageid="878a70a1-d658-4563-b27c-245f947b74be" name="Result" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-255" y="210" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6875cda6-dbbe-47b6-ab82-b62f89c90a88" name="JSON" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-165" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4956e14f-001c-4406-a401-38c63ff06696" name="Start" type="Start">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <loginhibit />
    <display x="-15" y="15" />
    <inputs>
      <input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" />
      <input type="text" name="JSON" narrative="The JSON to send" stage="JSON" />
      <input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" />
      <input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" />
      <input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" />
      <input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" />
      <input type="collection" name="Headers" narrative="OPTIONAL: Headers Collection" stage="Headers" />
      <input type="flag" name="Use Bearer Token" narrative="OPTIONAL: Set to True if using a Bearer Token for Authorization" stage="Use Bearer Token" />
      <input type="text" name="Bearer Token" narrative="OPTIONAL: Enter bearer token value here if one has been provided." stage="Bearer Token" />
      <input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" />
      <input type="text" name="User Agent" narrative="OPTIONAL: The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent." stage="UserAgent" />
    </inputs>
    <onsuccess>6b571f09-555c-45a8-9475-957d41cafb24</onsuccess>
  </stage>
  <stage stageid="696696c8-af04-4075-aea0-a8024e2431fe" name="Address URL" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-255" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="582df200-7287-4dc1-a9a2-6c9e09276f77" name="Proxy Password" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-165" y="45" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="924eb1dd-b782-4f71-82b6-9923ea0093ec" name="Proxy Username" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-255" y="45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ed09a5ed-6c7b-4dd3-9bf0-8df61da66ea3" name="Proxy URL" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-165" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5e35c8d6-3f97-4ae4-8566-35fb0981e145" name="Use Proxy" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-255" y="15" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4a9fcaf1-4310-45cb-a775-ebfadc75ac8a" name="Headers" type="Collection">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="75" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="9e64259d-1a91-444b-8620-b8cd186832d1" name="Accept" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-150" y="75" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="58e7a470-3ec3-4033-bb19-0fee1bdcaaed" name="HTTP Request" type="SubSheetInfo">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <narrative>Sends a message to HTTP endpoint using the specified HTTP method and content-type</narrative>
    <display x="-195" y="-105" w="150" h="90" />
  </stage>
  <stage stageid="d0a11dcd-f002-46b5-aff6-1026c3be2da8" name="End" type="End">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="0" y="75" />
    <outputs>
      <output type="text" name="Result" narrative="The result from the Post query." stage="Result" />
      <output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" />
      <output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" />
    </outputs>
  </stage>
  <stage stageid="1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8" name="HTTP Request" type="Code">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="0" y="0" />
    <inputs>
      <input type="text" name="addressURL" expr="[Address URL]" />
      <input type="text" name="body" expr="[Body]" />
      <input type="text" name="contentType" expr="[Content Type]" />
      <input type="text" name="method" expr="[Method]" />
      <input type="text" name="proxyURL" expr="[Proxy URL]" />
      <input type="flag" name="useProxy" expr="[Use Proxy]" />
      <input type="text" name="proxyUsername" expr="[Proxy Username]" />
      <input type="password" name="proxyPassword" expr="[Proxy Password]" />
      <input type="collection" name="headers" expr="[Headers]" />
      <input type="text" name="accept" expr="[Accept]" />
      <input type="text" name="username" expr="[Username]" />
      <input type="password" name="password" expr="[Password]" />
      <input type="text" name="certID" expr="[Certificate ID]" />
      <input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" />
      <input type="flag" name="usingFile" expr="[File]" />
      <input type="text" name="Bearer Token" expr="[Bearer Token]" />
      <input type="flag" name="UseBearerToken" expr="[Use Bearer Token]" />
      <input type="flag" name="allowAutoRedirects" expr="[Allow Auto Redirects]" />
      <input type="number" name="maxRedirects" expr="[Maximum Redirects]" />
      <input type="number" name="requestTimeout" expr="[Request Timeout]" />
      <input type="text" name="UserAgent" expr="[UserAgent]" />
    </inputs>
    <outputs>
      <output type="text" name="resultData" stage="Result" />
      <output type="text" name="resultHeadersJson" stage="ResultHeadersJson" />
      <output type="number" name="resultCode" stage="ResultCode" />
    </outputs>
    <onsuccess>d0a11dcd-f002-46b5-aff6-1026c3be2da8</onsuccess>
    <code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)

	If forcePreAuth Then
	   ' Sometimes a web server will require the authorisation header in the initial request
	   ' In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

	' Be aware that if you use forcePreAuth as well as UseBearerToken then forcePreAuth gets priority.
	If UseBearerToken And Not forcePreAuth Then
		request.Headers.Add("Authorization","Bearer " & Bearer_Token)
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	' Set the request timeout. Need to see if the user specified 'Infinite' (a value of -1 according to 
	' https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.timeout?view=net-5.0)
	If ((requestTimeout = -1) Or (requestTimeout > 0)) Then
		request.Timeout = requestTimeout
	Else 
		request.Timeout = 100000 ' Default
	End If

	request.Method = method
	request.ContentType = contentType

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If

	  ' Set the AllowAutoRedirect attribute.
	  httpRequest.AllowAutoRedirect = allowAutoRedirects
	  httpRequest.MaximumAutomaticRedirections = maxRedirects

	End If
	
    ' Copy the user-provided headers into the request headers collection.
	If Not headers Is Nothing Then
		For Each r As DataRow In headers.Rows
			For Each c As DataColumn In headers.Columns
				Dim columnName As String = c.ColumnName
				Dim val As String = r(columnName).ToString
				
				' This check ensures that we only include a single Authorization header in the request header collection.
				If Not columnName.ToUpper().Equals("AUTHORIZATION") Then
					request.Headers.Add(columnName,val)
				Else
					If Not forcePreAuth And Not UseBearerToken Then
						request.Headers.Add(columnName,val)					
					End If
				End If
			Next
			Exit For ' Only one row is allowed
		Next
	End If

	' Normal stream writer, we aren't encoding a file etc.
	If Not usingFile Then

		If Not String.IsNullOrEmpty(body) Then
		  Dim requestStream As IO.Stream = request.GetRequestStream()
		  Using sw As New IO.StreamWriter(requestStream, New Text.UTF8Encoding(False))
			sw.Write(body)
		  End Using
		End If

	Else If usingFile Then
		' Prep the request body
		Dim byteArray = File.ReadAllBytes( body )
		Dim requestStream As IO.Stream = request.GetRequestStream()
		requestStream.Write(byteArray,0, byteArray.Length)
	End If

	If Not String.IsNullOrEmpty(UserAgent) Then
		httpRequest.UserAgent = UserAgent
	End If

	Using response As WebResponse = request.GetResponse()
		' Need to cast the WebResponse to an HttpWebResponse so we can get the StatusCode and check compression status.
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		resultCode = Convert.ToInt32(httpResponse.StatusCode)

		resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
		Dim responseStream As IO.Stream = response.GetResponseStream()

		' Was compression used on the data?
		If (httpResponse.ContentEncoding.ToLower().Contains("gzip"))
			responseStream = New System.IO.Compression.GZipStream(responseStream, System.IO.Compression.CompressionMode.Decompress)
		ElseIf (httpResponse.ContentEncoding.ToLower().Contains("deflate"))
			responseStream = New System.IO.Compression.DeflateStream(responseStream, System.IO.Compression.CompressionMode.Decompress)            
		End If

		Dim sr As New IO.StreamReader(responseStream)
		resultData = sr.ReadToEnd()
	End Using

Catch e As WebException

	If Not e.Response Is Nothing Then

		Using webResponse as HttpWebResponse = e.Response()
			Using dataStream as Stream = webResponse.GetResponseStream()
				Using reader as StreamReader = new StreamReader(dataStream)
					resultData = reader.ReadToEnd()
				End Using
			End Using
			resultCode = Convert.ToInt32(webResponse.StatusCode)
			resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(webResponse))
		End Using
	Else
		throw 
	End If

End Try]]></code>
  </stage>
  <stage stageid="96e2df5a-429a-4030-9565-b8cbbf7be6b3" name="Result" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="390" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8f28cc4e-4ae2-4b01-ad23-0b632027d627" name="Body" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e305dce1-1fd7-459b-8211-27c26350676d" name="Block1" type="Block">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="-60" y="-30" w="195" h="60" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="0e0138a9-ccaa-44b1-b742-ad843c39aca1" name="Recover1" type="Recover">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="75" y="0" />
    <onsuccess>0645751f-e202-459a-b704-5fb0e0cbebe7</onsuccess>
  </stage>
  <stage stageid="0645751f-e202-459a-b704-5fb0e0cbebe7" name="Exception1" type="Exception">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="180" y="0" />
    <exception localized="yes" type="" detail="" usecurrent="yes" />
  </stage>
  <stage stageid="d8c39895-52d1-45ad-8cd0-be309896d0e5" name="Start" type="Start">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="0" y="-75" />
    <inputs>
      <input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" />
      <input type="text" name="Body" narrative="The body text of the HTTP request" stage="Body" />
      <input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" />
      <input type="text" name="Content Type" narrative="The content type of the HTTP request." stage="Content Type" />
      <input type="text" name="Method" narrative="The method of the HTTP request." stage="Method" />
      <input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" />
      <input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" />
      <input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" />
      <input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" />
      <input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" />
      <input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" />
      <input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" />
      <input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" />
      <input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." stage="Force Pre Authorization" />
      <input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" stage="File" />
      <input type="flag" name="Use Bearer Token" stage="Use Bearer Token" />
      <input type="text" name="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." stage="Bearer Token" />
      <input type="flag" name="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." stage="Allow Auto Redirects" />
      <input type="number" name="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." stage="Maximum Redirects" />
      <input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" />
      <input type="text" name="User Agent" narrative="OPTIONAL: The user agent property supplied by browsers or other applications." stage="UserAgent" />
    </inputs>
    <onsuccess>1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8</onsuccess>
  </stage>
  <stage stageid="c4e87c4e-8150-4a15-8fc5-ddc736b949ae" name="Address URL" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="038a7411-25dc-456c-8007-bb82f3d94de7" name="Proxy Password" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="135" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8ef02e3a-8214-4163-b44d-a5081ed8b9e4" name="Proxy Username" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="1c6f3a8d-428e-4a61-815c-f32a8a117ae3" name="Proxy URL" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5c4cc5f6-0531-4375-b9c1-3fcb529dde9b" name="Use Proxy" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="105" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4a98d0d5-c3b8-42fb-933f-2168265f12d6" name="Content Type" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="fc9f21c4-39ba-4135-8356-f9a516bf6b99" name="Method" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6b571f09-555c-45a8-9475-957d41cafb24" name="HTTP Request" type="SubSheet">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <loginhibit />
    <display x="-15" y="75" />
    <inputs>
      <input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" />
      <input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" />
      <input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" />
      <input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" />
      <input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" />
      <input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" />
      <input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" />
      <input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" />
      <input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" />
      <input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" />
      <input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" />
      <input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" />
      <input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" />
      <input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" />
      <input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" />
      <input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="[Use Bearer Token]" />
      <input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="[Bearer Token]" />
      <input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" />
      <input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" />
      <input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="[Request Timeout]" />
      <input type="text" name="User Agent" friendlyname="User Agent" narrative="OPTIONAL: The user agent property supplied by browsers or other applications." expr="[UserAgent]" />
    </inputs>
    <outputs>
      <output type="text" name="Result" narrative="The result from the Post query." stage="Result" />
      <output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" />
      <output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" />
    </outputs>
    <onsuccess>37166627-b66b-4a9c-a321-539933de2123</onsuccess>
    <processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid>
  </stage>
  <stage stageid="33b3447c-a55e-4af3-be35-6cb5624d6a4f" name="Headers" type="Collection">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="45" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ac16a164-f018-4111-949f-3db9d4d873d9" name="Accept" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="23c8dd77-277a-4aac-8df7-31c951626abd" name="Body" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-195" y="210" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e9085eba-5f15-4b65-91ed-41abf7c6917f" name="HTTP Request" type="SubSheet">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="15" y="120" />
    <inputs>
      <input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" />
      <input type="text" name="Body" narrative="The body text of the HTTP request" expr="[Body]" />
      <input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" />
      <input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" />
      <input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" />
      <input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" />
      <input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" />
      <input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" />
      <input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" />
      <input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="[Accept]" />
      <input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" />
      <input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" />
      <input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" />
      <input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" />
      <input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" />
      <input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="[Use Bearer Token]" />
      <input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="[Bearer Token]" />
      <input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" />
      <input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" />
      <input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="[Request Timeout]" />
      <input type="text" name="User Agent" friendlyname="User Agent" narrative="OPTIONAL: The user agent property supplied by browsers or other applications." expr="[UserAgent]" />
    </inputs>
    <outputs>
      <output type="text" name="Result" narrative="The result from the Post query." stage="Result" />
      <output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" />
      <output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" />
    </outputs>
    <onsuccess>f51a79a9-1213-484c-bedc-065f44051a02</onsuccess>
    <processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid>
  </stage>
  <stage stageid="4bd01e67-49a4-4082-be0d-df1bb9cecb13" name="Username" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="165" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="dac70b0c-83cb-4605-8f7b-d1d8d21922d3" name="Password" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="165" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="9091a189-b87b-4ed7-9747-1e1e9fe657f6" name="Load Certificate" type="SubSheetInfo">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <narrative>This action loads an X.509 certificate from a file and returns the certificate ID.</narrative>
    <display x="-195" y="-105" w="150" h="90" />
  </stage>
  <stage stageid="3cff8803-c15f-4ab4-a032-d0afb9fa20ae" name="Start" type="Start">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="15" y="-105" />
    <inputs>
      <input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" stage="Filename" />
      <input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" stage="Subject" />
      <input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" stage="Password" />
    </inputs>
    <onsuccess>8962b858-f6e2-413c-9ceb-3d80dee88de2</onsuccess>
  </stage>
  <stage stageid="17fddf56-07f2-4942-8515-e1b183458a7f" name="End" type="End">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="15" y="15" />
    <outputs>
      <output type="text" name="Certificate ID" narrative="The ID of the certificate" stage="Certificate ID" />
    </outputs>
  </stage>
  <stage stageid="e9b8de2b-8e54-4772-b186-046ca262c94c" name="Filename" type="Data">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <display x="-240" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5f0ec822-a1c0-4b6b-91ba-739b0b2762b8" name="Subject" type="Data">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <display x="-150" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8962b858-f6e2-413c-9ceb-3d80dee88de2" name="Load" type="Code">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="15" y="-45" />
    <inputs>
      <input type="text" name="filename" expr="[Filename]" />
      <input type="password" name="password" expr="[Password]" />
      <input type="text" name="subject" expr="[Subject]" />
    </inputs>
    <outputs>
      <output type="text" name="thumbprint" stage="Certificate ID" />
    </outputs>
    <onsuccess>17fddf56-07f2-4942-8515-e1b183458a7f</onsuccess>
    <code><![CDATA[Dim cert As X509Certificate2 = Nothing
If Not String.IsNullOrEmpty(filename) Then
  cert = New X509Certificate2(filename,password)
End If

If Not String.IsNullOrEmpty(subject) Then
  cert=GetCertificate(subject)
End If

thumbprint = cert.Thumbprint
m_Certificates.Add(thumbprint,cert)
]]></code>
  </stage>
  <stage stageid="745e7557-7761-4078-8ff7-334b6873f126" name="Certificate ID" type="Data">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <display x="-195" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="471ae54f-286f-4472-b48c-114fc7d04bf9" name="Password" type="Data">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <display x="-240" y="30" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="452476e7-b29f-4e5f-999a-c67789bbb0db" name="Certificate ID" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="195" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5de144f5-aa91-46e0-8f9c-ac8495d2ab0c" name="Force Pre Authorization" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="75" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c83483da-e145-4802-8407-a40cf74fc86a" name="URL Encode" type="SubSheetInfo">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <narrative>This action provides the ability to encode a URL. URL encoding converts characters that are not allowed in a URL into character-entity equivalents. For example, when the characters &lt; and &gt; are embedded in a URL, they are encoded as %3c and %3e.</narrative>
    <display x="-195" y="-105" w="150" h="90" />
  </stage>
  <stage stageid="f640efd4-cb34-48ee-b07d-de356b07b09b" name="Start" type="Start">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <loginhibit />
    <display x="15" y="-120" />
    <inputs>
      <input type="text" name="URL" narrative="The URL to encode" stage="URL" />
    </inputs>
    <onsuccess>d0c241bd-a746-44fc-9fdd-5f73a4c55bf9</onsuccess>
  </stage>
  <stage stageid="0d4cffb2-879f-49d1-b815-43da8446a39c" name="End" type="End">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <loginhibit />
    <display x="15" y="30" />
    <outputs>
      <output type="text" name="URL" narrative="The encoded URL" stage="URL" />
    </outputs>
  </stage>
  <stage stageid="d0c241bd-a746-44fc-9fdd-5f73a4c55bf9" name="Encode URL" type="Code">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <loginhibit />
    <display x="15" y="-45" />
    <inputs>
      <input type="text" name="URL" expr="[URL]" />
    </inputs>
    <outputs>
      <output type="text" name="Encoded URL" stage="URL" />
    </outputs>
    <onsuccess>0d4cffb2-879f-49d1-b815-43da8446a39c</onsuccess>
    <code><![CDATA[
Encoded_URL = HttpUtility.UrlEncode( URL )]]></code>
  </stage>
  <stage stageid="7a1cd30a-feef-4786-89fd-cf1838f4dfaa" name="URL" type="Data">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <display x="-195" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e627cc07-7d3a-40bd-a02a-0a2952f079d0" name="Headers" type="Collection">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-255" y="75" w="90" h="30" />
    <font family="Tahoma" size="10" style="Regular" color="FF6600" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="495a88d6-260c-4b89-a04c-64a12af7b759" name="File" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="75" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="765d4221-5509-4c70-97c4-a946b7d3d186" name="ResultHeadersJson" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="390" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ea993d2e-35df-484b-9c46-a2d69a172ceb" name="ResultHeadersJson" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-165" y="210" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="031e4c4f-fa80-4e54-b2ab-847483e49414" name="ResultHeadersJson" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-150" y="285" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="caabb2b2-6772-4932-8ad6-0695d1a170d9" name="Inputs" type="Block">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="-300" y="-45" w="210" h="210" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="ae023e33-e349-4bf0-80e0-7e3794a1dbc2" name="Protected Variables" type="Block">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="-300" y="180" w="210" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="FFFF99" />
  </stage>
  <stage stageid="76b976d1-2b36-4ea6-8c01-04fa5ea31f20" name="Outputs" type="Block">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="-300" y="255" w="210" h="90" />
    <font family="Segoe UI" size="10" style="Regular" color="CCFFCC" />
  </stage>
  <stage stageid="4b809006-50ee-41b3-b1db-2bc0165f895f" name="Inputs" type="Block">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <loginhibit />
    <display x="-315" y="-45" w="210" h="210" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="2e4c34da-85e1-4b3d-86a2-de7a6b10fcf6" name="Outputs" type="Block">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <loginhibit />
    <display x="-315" y="180" w="210" h="105" />
    <font family="Segoe UI" size="10" style="Regular" color="CCFFCC" />
  </stage>
  <stage stageid="cad4106c-2c71-48d0-960d-4d2c78a91eff" name="Inputs" type="Block">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="-300" y="-45" w="210" h="360" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="a42642fa-1d93-42e4-942a-cb7a7087efef" name="Outputs" type="Block">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="-300" y="360" w="210" h="90" />
    <font family="Segoe UI" size="10" style="Regular" color="CCFFCC" />
  </stage>
  <stage stageid="4a325f2f-9650-490c-b4bb-61928ef10e68" name="Inputs" type="Block">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="-300" y="-45" w="210" h="105" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="67c03883-48e2-4ef1-8e3a-98ca0652e901" name="Outputs" type="Block">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="-300" y="75" w="210" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="CCFFCC" />
  </stage>
  <stage stageid="1d4b7d60-b4f9-48d1-8e90-6759e1bfc573" name="Input / Output" type="Block">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <loginhibit />
    <display x="-270" y="-45" w="150" h="60" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="161716ff-18e8-4dd0-8005-b4955791a4de" name="HTTP Request File" type="SubSheetInfo">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <narrative>Sends a message to HTTP endpoint using the specified HTTP method and content-type and receives the binary response.</narrative>
    <display x="-195" y="-150" w="150" h="90" />
  </stage>
  <stage stageid="18d7e0ce-f7cc-47fd-8172-4bca401593ae" name="End" type="End">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="15" y="45" />
    <outputs>
      <output type="text" name="Result" narrative="The result from the Post query." stage="Result" />
      <output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" />
      <output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" />
    </outputs>
  </stage>
  <stage stageid="00fb6208-ae39-4f9d-92d7-a336172eff1e" name="HTTP Request File" type="Code">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <narrative>Use this action to request binary files (ex. PDF) over HTTP.</narrative>
    <display x="15" y="-30" />
    <inputs>
      <input type="text" name="addressURL" expr="[Address URL]" />
      <input type="text" name="body" expr="[Body]" />
      <input type="text" name="contentType" expr="[Content Type]" />
      <input type="text" name="method" expr="[Method]" />
      <input type="text" name="proxyURL" expr="[Proxy URL]" />
      <input type="flag" name="useProxy" expr="[Use Proxy]" />
      <input type="text" name="proxyUsername" expr="[Proxy Username]" />
      <input type="password" name="proxyPassword" expr="[Proxy Password]" />
      <input type="collection" name="headers" expr="[Headers]" />
      <input type="text" name="accept" expr="[Accept]" />
      <input type="text" name="username" expr="[Username]" />
      <input type="password" name="password" expr="[Password]" />
      <input type="text" name="certID" expr="[Certificate ID]" />
      <input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" />
      <input type="flag" name="usingFile" expr="[File]" />
      <input type="text" name="FilePath" expr="[FilePath]" />
      <input type="flag" name="Use Bearer Token" expr="[Use Bearer Token]" />
      <input type="text" name="Bearer Token" expr="[Bearer Token]" />
      <input type="flag" name="allowAutoRedirects" expr="[Allow Auto Redirects]" />
      <input type="number" name="maxRedirects" expr="[Maximum Redirects]" />
      <input type="number" name="requestTimeout" expr="[Request Timeout]" />
      <input type="text" name="UserAgent" expr="[UserAgent]" />
    </inputs>
    <outputs>
      <output type="text" name="resultData" stage="Result" />
      <output type="text" name="resultHeadersJson" stage="ResultHeadersJson" />
      <output type="number" name="resultCode" stage="ResultCode" />
    </outputs>
    <onsuccess>18d7e0ce-f7cc-47fd-8172-4bca401593ae</onsuccess>
    <code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)

	If forcePreAuth Then
	   ' Sometimes a web server will require the authorisation header in the initial request
	   ' In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

    ' Be aware that if you use forcePreAuth as well as UseBearerToken then forcePreAuth gets priority.
	If Use_Bearer_Token And Not forcePreAuth Then
		request.Headers.Add("Authorization","Bearer " & Bearer_Token)
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	' Set the request timeout. Need to see if the user specified 'Infinite' (a value of -1 according to 
	' https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.timeout?view=net-5.0)
	If ((requestTimeout = -1) Or (requestTimeout > 0)) Then
		request.Timeout = requestTimeout
	Else 
		request.Timeout = 100000 ' Default
	End If

	request.Method = method
	request.ContentType = contentType

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If

	  ' Set the AllowAutoRedirect attribute.
	  httpRequest.AllowAutoRedirect = allowAutoRedirects
	  httpRequest.MaximumAutomaticRedirections = maxRedirects

	End If

	For Each r As DataRow In headers.Rows
		For Each c As DataColumn In headers.Columns
			Dim columnName As String = c.ColumnName
			Dim val As String = r(columnName).ToString

			' This check ensures that we only include a single Authorization header in the request header collection.
			If Not columnName.ToUpper().Equals("AUTHORIZATION") Then
				request.Headers.Add(columnName,val)
			Else
				If Not forcePreAuth And Not Use_Bearer_Token Then
					request.Headers.Add(columnName,val)					
				End If
			End If
		Next
		Exit For ' Only one row is allowed
	Next

	' Normal stream writer, we aren't encoding a file etc.
	If Not usingFile Then

		If Not String.IsNullOrEmpty(body) Then
		  Dim requestStream As IO.Stream = request.GetRequestStream()
		  Using sw As New IO.StreamWriter(requestStream, New Text.UTF8Encoding(False))
			sw.Write(body)
		  End Using
		End If

	Else If usingFile Then
		' Prep the request body
		Dim byteArray = File.ReadAllBytes( body )
		Dim requestStream As IO.Stream = request.GetRequestStream()
		requestStream.Write(byteArray,0, byteArray.Length)
	End If

	If Not String.IsNullOrEmpty(UserAgent) Then
		httpRequest.UserAgent = UserAgent
	End If
	

	Using response As WebResponse = request.GetResponse()
		' Need to cast the WebResponse to an HttpWebResponse so we can get the StatusCode and check to see if compression was used.
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		resultCode = Convert.ToInt32(httpResponse.StatusCode)

		resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
		Dim responseStream As IO.Stream = response.GetResponseStream()
        Dim lWriter As New IO.FileStream(FilePath, IO.FileMode.Create)

		' Was compression used on the data?
		If (httpResponse.ContentEncoding.ToLower().Contains("gzip"))
			responseStream = New System.IO.Compression.GZipStream(responseStream, System.IO.Compression.CompressionMode.Decompress)
		ElseIf (httpResponse.ContentEncoding.ToLower().Contains("deflate"))
			responseStream = New System.IO.Compression.DeflateStream(responseStream, System.IO.Compression.CompressionMode.Decompress)            
		End If

		Dim lLength As Long
		Dim lBytes(256) As Byte

		Do
			lLength = responseStream.Read(lBytes, 0, lBytes.Length)
			lWriter.Write(lBytes, 0, lLength)
		Loop While lLength > 0

		lWriter.Close()
		responseStream.Close()

		resultData = "done"

	End Using

Catch e As WebException

	If Not e.Response Is Nothing Then
		Using webResponse as HttpWebResponse = e.Response()
			Using dataStream as Stream = webResponse.GetResponseStream()
				Using reader as StreamReader = new StreamReader(dataStream)
					resultData = reader.ReadToEnd()
				End Using
			End Using
			resultCode = Convert.ToInt32(webResponse.StatusCode)
			resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(webResponse))
		End Using
	Else
		throw ' if there is no valid response object, let the process handle the exception
	End If

End Try]]></code>
  </stage>
  <stage stageid="170b9d76-a47e-4df2-97a6-9ddfbc95078b" name="Result" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-210" y="330" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="bb727f57-eba7-4393-a5c0-5be33be37d80" name="Body" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="995fdfcf-58d1-4097-8f13-7d6badc2f4a3" name="Block1" type="Block">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="-30" y="-60" w="180" h="60" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="34f43df2-1204-4bc2-b250-f2840e842d0f" name="Recover1" type="Recover">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="105" y="-30" />
    <onsuccess>910ea143-a909-4eca-a5e6-4c2142b95720</onsuccess>
  </stage>
  <stage stageid="910ea143-a909-4eca-a5e6-4c2142b95720" name="Exception1" type="Exception">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="210" y="-30" />
    <exception localized="yes" type="" detail="" usecurrent="yes" />
  </stage>
  <stage stageid="bc43a2e3-432a-467a-812d-4ccb88a62b02" name="Start" type="Start">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="15" y="-105" />
    <inputs>
      <input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" />
      <input type="text" name="Body" narrative="The body text of the HTTP request" stage="Body" />
      <input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" />
      <input type="text" name="Content Type" narrative="The content type of the HTTP request." stage="Content Type" />
      <input type="text" name="Method" narrative="The method of the HTTP request." stage="Method" />
      <input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" />
      <input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" />
      <input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" />
      <input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" />
      <input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" />
      <input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" />
      <input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" />
      <input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" />
      <input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" stage="Force Pre Authorization" />
      <input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" stage="File" />
      <input type="text" name="FilePath" narrative="OPTIONAL: If requesting a binary file (ex. PDF) set this to the path and file name where the file should be saved. NOTE: File name should include the file extension." stage="FilePath" />
      <input type="flag" name="Use Bearer Token" stage="Use Bearer Token" />
      <input type="text" name="Bearer Token" narrative="OPTIONAL: Enter bearer token value here if one has been provided. " stage="Bearer Token" />
      <input type="flag" name="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." stage="Allow Auto Redirects" />
      <input type="number" name="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." stage="Maximum Redirects" />
      <input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" />
      <input type="text" name="User Agent" narrative="OPTIONAL: This property is the string identifier used by software that connects over the internet." stage="UserAgent" />
    </inputs>
    <onsuccess>00fb6208-ae39-4f9d-92d7-a336172eff1e</onsuccess>
  </stage>
  <stage stageid="e8540bec-f19c-4797-b6cb-aba944384ca1" name="Address URL" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="9f90b8e6-1112-4012-bbc5-92805ffd869d" name="Proxy Password" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="105" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="dcfc84d2-6734-4a0d-98f7-c911c33335a3" name="Proxy Username" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="05c0b4f2-a550-41da-bad4-1f5ba7f34716" name="Proxy URL" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="75" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d510d39e-2e3f-4737-8e0c-2783c2bd7e08" name="Use Proxy" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="75" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5ad50174-fbe1-4847-8f57-6e02ffe66bcb" name="Content Type" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="26446a3f-6b6d-4cbe-b594-acc849fbc4d6" name="Method" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e9e08346-5eda-4e77-9567-f5c5c7a3a093" name="Headers" type="Collection">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="15" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="70903a73-74d7-4d6a-9228-9cf2bdc8e28c" name="Accept" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="45f3c763-f7cb-406e-a52f-c07238826e1f" name="Username" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="62706f83-ea14-4c02-a49f-85ae54dd685f" name="Password" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="135" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e4445dd3-ea80-4a41-bd03-7b7254fbf6db" name="Certificate ID" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="165" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a0ed3881-bfbe-4dab-aab1-207853314195" name="Force Pre Authorization" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="45" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="13306d41-fcb6-4cc2-8efc-09e808bd5b60" name="File" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="45" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="94762f9b-44d9-4432-a791-36066057437e" name="ResultHeadersJson" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="330" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="1aefb8da-ea0d-4243-9682-014d7ebbdad9" name="Inputs" type="Block">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="-285" y="-75" w="210" h="360" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="dd3bc439-ff26-4457-876e-06b3b8139364" name="Outputs" type="Block">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="-285" y="300" w="210" h="105" />
    <font family="Segoe UI" size="10" style="Regular" color="CCFFCC" />
  </stage>
  <stage stageid="722458e4-71be-48d2-a1f2-6f6f5d1f01e1" name="FilePath" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <loginhibit />
    <display x="-135" y="165" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="fd79fc43-be32-4457-abf6-08993c1bc0ec" name="Block1" type="Block">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="-45" y="15" w="195" h="60" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="d30b7a5b-599a-4875-a432-762079b25e61" name="Recover1" type="Recover">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="90" y="45" />
    <onsuccess>5d022479-efd0-49fa-8743-5b3b1c53fac1</onsuccess>
  </stage>
  <stage stageid="5d022479-efd0-49fa-8743-5b3b1c53fac1" name="Exception1" type="Exception">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="195" y="45" />
    <exception localized="yes" type="" detail="" usecurrent="yes" />
  </stage>
  <stage stageid="e13740fe-13bd-41cd-9d8e-7a1bfcc9739f" name="Block1" type="Block">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="-30" y="-75" w="180" h="60" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="a938783d-2fd8-441f-ae6c-689921e1d1f6" name="Recover1" type="Recover">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="105" y="-45" />
    <onsuccess>7a1733ba-d4c4-4d6f-a601-8be80f4f9491</onsuccess>
  </stage>
  <stage stageid="7a1733ba-d4c4-4d6f-a601-8be80f4f9491" name="Exception1" type="Exception">
    <subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid>
    <loginhibit />
    <display x="210" y="-45" />
    <exception localized="yes" type="" detail="" usecurrent="yes" />
  </stage>
  <stage stageid="91934b81-a8b6-4f29-8aa9-3b738e9d53da" name="Block1" type="Block">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <loginhibit />
    <display x="-45" y="-75" w="180" h="60" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="e8388e84-a3ff-407e-8997-1c708c4e18c9" name="Recover1" type="Recover">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <loginhibit />
    <display x="90" y="-45" />
    <onsuccess>06948128-c0df-4c96-84ac-2fa362ff3e4d</onsuccess>
  </stage>
  <stage stageid="06948128-c0df-4c96-84ac-2fa362ff3e4d" name="Exception1" type="Exception">
    <subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid>
    <loginhibit />
    <display x="195" y="-45" />
    <exception localized="yes" type="" detail="" usecurrent="yes" />
  </stage>
  <stage stageid="3509042f-2bb3-41c4-9b2e-0c3e3dba0b41" name="ResultCode" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="420" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a2685e68-661c-4e2e-a9c2-4fb8eed23bf2" name="ResultCode" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="315" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d59c1284-70d5-46c0-ae05-77e776b685b9" name="ResultCode" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-255" y="255" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="89150ecf-1822-47a1-905e-e7d1b49b9ed8" name="ResultCode" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-210" y="375" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="4cc1b3b6-1b93-49d1-b5e1-a5dc0e638c79" name="Bearer Token" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <display x="-150" y="225" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a66aa3f4-5be4-4b29-89e7-0d6d6290a959" name="Use Bearer Token" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="225" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d5dbfc7e-9901-49fd-b89b-add521619228" name="Note1" type="Note">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <narrative>Force Pre Authorization - Make sure that this isn't used with Use Bearer Token. Only one Authorization header is needed.

Headers Collection - If you use Use Bearer Token, make sure that this collection doesn't contain an Authorization header.

Use Bearer Token is not configured to work using a Proxy.</narrative>
    <display x="-495" y="60" w="330" h="210" />
    <font family="Segoe UI" size="14" style="Regular" color="FF0000" />
  </stage>
  <stage stageid="83c65d81-f13a-4c5c-bfcb-4b96df052746" name="Bearer Token" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <loginhibit />
    <display x="-150" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d31ae653-1789-4539-9ddb-15301d438d16" name="Use Bearer Token" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="105" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="efaa6f7c-43f9-4c18-aa5c-5cd3f3506386" name="Use Bearer Token" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-255" y="105" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e39cecbe-6abc-430a-b5c2-7281e57af9af" name="Bearer Token" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-165" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="28f476b7-37b6-4e88-93ad-d4a1b1e289f0" name="Use Bearer Token" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="195" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="a1f6da3d-53c9-44b3-8489-e6db32ace249" name="Bearer Token" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="195" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="db3476b1-7e22-44fa-94ea-22a3292b2866" name="Note3" type="Note">
    <loginhibit />
    <narrative>Version: 10.0.2</narrative>
    <display x="15" y="-195" w="120" h="30" />
    <font family="Segoe UI" size="14" style="Bold" color="FF0000" />
  </stage>
  <stage stageid="585a3401-d73c-4b6c-a098-15337afed881" name="HTTP Request Multipart" type="SubSheetInfo">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <narrative>Sends a message to HTTP endpoint using the POST HTTP method with multipart as the content-type.</narrative>
    <display x="-180" y="-135" w="150" h="90" />
  </stage>
  <stage stageid="3adec6c2-46c0-4bd4-ab34-03908e5a7d5c" name="End" type="End">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="15" y="45" />
    <outputs>
      <output type="text" name="Result" narrative="The result from the Post query." stage="Result" />
      <output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" />
      <output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" />
    </outputs>
  </stage>
  <stage stageid="32a4e0a5-1366-40aa-9519-e62142789499" name="HTTP Request Multipart" type="Code">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <narrative>Sends a multipart HTTP request</narrative>
    <display x="15" y="-30" />
    <inputs>
      <input type="text" name="addressURL" expr="[Address URL]" />
      <input type="text" name="proxyURL" expr="[Proxy URL]" />
      <input type="flag" name="useProxy" expr="[Use Proxy]" />
      <input type="text" name="proxyUsername" expr="[Proxy Username]" />
      <input type="password" name="proxyPassword" expr="[Proxy Password]" />
      <input type="collection" name="headers" expr="[Headers]" />
      <input type="text" name="accept" expr="[Accept]" />
      <input type="text" name="username" expr="[Username]" />
      <input type="password" name="password" expr="[Password]" />
      <input type="text" name="certID" expr="[Certificate ID]" />
      <input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" />
      <input type="text" name="Bearer Token" expr="[Bearer Token]" />
      <input type="flag" name="UseBearerToken" expr="[Use Bearer Token]" />
      <input type="collection" name="FileMetadata" expr="[FileMetadata]" />
      <input type="collection" name="FieldMetadata" expr="[FieldMetadata]" />
      <input type="flag" name="allowAutoRedirects" expr="[Allow Auto Redirects]" />
      <input type="number" name="maxRedirects" expr="[Maximum Redirects]" />
      <input type="number" name="requestTimeout" expr="[Request Timeout]" />
      <input type="text" name="UserAgent" expr="[UserAgent]" />
    </inputs>
    <outputs>
      <output type="text" name="resultData" stage="Result" />
      <output type="text" name="resultHeadersJson" stage="ResultHeadersJson" />
      <output type="number" name="resultCode" stage="ResultCode" />
    </outputs>
    <onsuccess>3adec6c2-46c0-4bd4-ab34-03908e5a7d5c</onsuccess>
    <code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)
	Dim boundary As String = "boundaryboundary"
    Dim boundaryBytes As Byte() = System.Text.Encoding.ASCII.GetBytes(vbCrLf & "--" & boundary & vbCrLf)

	' Set the request timeout. Need to see if the user specified 'Infinite' (a value of -1 according to 
	' https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.timeout?view=net-5.0)
	If ((requestTimeout = -1) Or (requestTimeout > 0)) Then
		request.Timeout = requestTimeout
	Else 
		request.Timeout = 100000 ' Default
	End If

	If forcePreAuth Then
	   ' Sometimes a web server will require the authorisation header in the initial request
	   ' In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

	' Be aware that if you use forcePreAuth as well as UseBearerToken then forcePreAuth gets priority.
	If UseBearerToken And Not forcePreAuth Then
		request.Headers.Add("Authorization","Bearer " & Bearer_Token)
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	request.Method = "POST"
	request.ContentType = "multipart/form-data; boundary=" + boundary

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If
	End If



	' Set the AllowAutoRedirect attribute.
	httpRequest.AllowAutoRedirect = allowAutoRedirects
	httpRequest.MaximumAutomaticRedirections = maxRedirects

	If Not String.IsNullOrEmpty(UserAgent) Then
		httpRequest.UserAgent = UserAgent
	End If

    ' Make sure that if you use UseBearerToken check that the Headers parameter doesn't have an Authorization entry.
	If Not headers Is Nothing Then
		For Each r As DataRow In headers.Rows
			For Each c As DataColumn In headers.Columns
				Dim columnName As String = c.ColumnName
				Dim val As String = r(columnName).ToString
				
				' This check ensures that we only include a single Authorization header in the request header collection.
				If Not columnName.ToUpper().Equals("AUTHORIZATION") Then
					request.Headers.Add(columnName,val)
				Else
					If Not forcePreAuth And Not UseBearerToken Then
						request.Headers.Add(columnName,val)					
					End If
				End If
			Next
			Exit For ' Only one row is allowed
		Next
	End If

	Dim requestStream As IO.Stream = request.GetRequestStream()

	Dim FileName As String
	Dim FieldName As String
	Dim ContentType As String

	' Add the Field Metadata to the request body first.
	For Each fieldData As DataRow In FieldMetadata.Rows
	
		requestStream.Write(boundaryBytes, 0, boundaryBytes.Length)

		Dim Data As String = "Content-Disposition: form-data; name=""" & fieldData.Item("Name") & """" & vbCrLf
        If fieldData.Item("ContentType") <> "" Then 
			Data = Data & "Content-Type: " + fieldData.Item("ContentType") & vbCrLf & vbCrLf
            Data = Data & fieldData.Item("Value")
            Else
	        Data = Data & vbCrLf & fieldData.Item("Value")
		End If
        
		Dim DataBytes As Byte() = System.Text.Encoding.UTF8.GetBytes(Data)
		
        requestStream.Write(DataBytes, 0, DataBytes.Length)

	Next

	' Now add the various files to the body.
    For Each fileData As DataRow In FileMetadata.Rows
		
		'Start of multipart boundary
		requestStream.Write(boundaryBytes, 0, boundaryBytes.Length)

		If fileData.Item("FieldName")="" Then 
		FieldName="file" 
		Else FieldName=fileData.Item("FieldName") 
		End If

		If fileData.Item("FileName")="" Then 
		FileName=Path.GetFileName(fileData.Item("filepath"))
		Else FileName=fileData.Item("FileName") 
		End If

		If fileData.Item("ContentType")="" Then 
		ContentType=MimeMapping.GetMimeMapping(Path.GetFileName(fileData.Item("filepath")))
		Else ContentType=fileData.Item("ContentType") 
		End If

		Dim header As String = "Content-Disposition: form-data; name=""" & FieldName & """; filename=""" & FileName & """" & vbCrLf & "Content-Type: " + ContentType & vbCrLf & vbCrLf
		Dim bytes As Byte() = System.Text.Encoding.UTF8.GetBytes(header)
		requestStream.Write(bytes, 0, bytes.Length)
    	
		Dim bytesRead = File.ReadAllBytes(fileData.Item("FilePath"))
        	requestStream.Write(bytesRead, 0, bytesRead.Length)

	Next

	'End of multipart boundary
	Dim trailer As Byte() = System.Text.Encoding.ASCII.GetBytes(vbCrLf & "--" & boundary & "--" & vbCrLf)
    requestStream.Write(trailer, 0, trailer.Length)
    requestStream.Close()

	Using response As WebResponse = request.GetResponse()
		' Need to cast the WebResponse to an HttpWebResponse so we can get the StatusCode and check to see if compression was used.
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		resultCode = Convert.ToInt32(httpResponse.StatusCode)

		resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
		Dim responseStream As IO.Stream = response.GetResponseStream()

		' Was compression used on the data?
		If (httpResponse.ContentEncoding.ToLower().Contains("gzip"))
			responseStream = New System.IO.Compression.GZipStream(responseStream, System.IO.Compression.CompressionMode.Decompress)
		ElseIf (httpResponse.ContentEncoding.ToLower().Contains("deflate"))
			responseStream = New System.IO.Compression.DeflateStream(responseStream, System.IO.Compression.CompressionMode.Decompress)            
		End If

		Dim sr As New IO.StreamReader(responseStream)
		resultData = sr.ReadToEnd()
	End Using

Catch e As WebException

	If Not e.Response Is Nothing Then

		Using webResponse as HttpWebResponse = e.Response()
			Using dataStream as Stream = webResponse.GetResponseStream()
				Using reader as StreamReader = new StreamReader(dataStream)
					resultData = reader.ReadToEnd()
				End Using
			End Using
			resultCode = Convert.ToInt32(webResponse.StatusCode)
			resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(webResponse))
		End Using
	Else
		throw 
	End If

End Try]]></code>
  </stage>
  <stage stageid="963972a4-a007-4341-af9f-c6ef75f14920" name="Result" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="315" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="903cac1f-30ca-40dc-98b8-42f2d11cb6a4" name="Block1" type="Block">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="-45" y="-60" w="195" h="60" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="10d2bb33-8542-4bda-8b8d-0c8cd4290385" name="Recover1" type="Recover">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="90" y="-30" />
    <onsuccess>d7bacdf2-b0bf-4934-943d-d226e9a09264</onsuccess>
  </stage>
  <stage stageid="d7bacdf2-b0bf-4934-943d-d226e9a09264" name="Exception1" type="Exception">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="195" y="-30" />
    <exception localized="yes" type="" detail="" usecurrent="yes" />
  </stage>
  <stage stageid="063dce59-4ddf-4e2e-8de5-88f7ffe33530" name="Start" type="Start">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="15" y="-105" />
    <inputs>
      <input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" />
      <input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" />
      <input type="collection" name="FileMetadata" narrative="Files to be sent in the multipart HTTP  request" stage="FileMetadata" />
      <input type="collection" name="FieldMetadata" narrative="Text data to be sent in the multipart HTTP  request" stage="FieldMetadata" />
      <input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" />
      <input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" />
      <input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" />
      <input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" />
      <input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" />
      <input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" />
      <input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" />
      <input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" />
      <input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" stage="Force Pre Authorization" />
      <input type="flag" name="Use Bearer Token" narrative="OPTIONAL: If you need bearer token authorization set this to true." stage="Use Bearer Token" />
      <input type="text" name="Bearer Token" narrative="OPTIONAL: If you have a bearer token and need to use authorization" stage="Bearer Token" />
      <input type="flag" name="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." stage="Allow Auto Redirects" />
      <input type="number" name="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." stage="Maximum Redirects" />
      <input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" />
      <input type="text" name="User Agent" narrative="OPTIONAL: The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent." stage="UserAgent" />
    </inputs>
    <onsuccess>32a4e0a5-1366-40aa-9519-e62142789499</onsuccess>
  </stage>
  <stage stageid="bad6d1f4-bdbf-4eaf-bbba-cae87e0adc5b" name="Address URL" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="-45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="80dba3fd-4152-45bb-bcf8-a96c3c05828d" name="Proxy Password" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="45" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6d18a12b-6f9d-47e9-ba19-7729733d51b3" name="Proxy Username" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="45" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="0ebe6750-8f30-4797-9cce-cc945a880403" name="Proxy URL" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="30a7630d-d5db-422c-80e6-97b45f287851" name="Use Proxy" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="15" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="2545caff-1d1d-47c0-b752-1d1dd073b912" name="Headers" type="Collection">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="-45" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="11ff9930-c087-4c05-ad52-07130ab67b42" name="Accept" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="-15" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="b72acba7-f345-40f3-b349-d159af3d71ee" name="Username" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="75" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="960d9197-e030-4efd-b3c2-7843e15ec1fe" name="Password" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="75" w="90" h="30" />
    <datatype>password</datatype>
    <initialvalueenc>
    </initialvalueenc>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e9590c7c-8515-4c91-9e18-f503b20a4a23" name="Certificate ID" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c27d4469-a0a9-4e5d-9e4e-4486bf3cb9ea" name="Force Pre Authorization" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="-15" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5084587f-09a9-4613-b6de-ae9a47782c43" name="ResultHeadersJson" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="315" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e7d807d6-0eb8-49b1-8d03-3e661ef44996" name="Inputs" type="Block">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="-285" y="-75" w="210" h="330" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="9d4a3881-f78f-4556-8d00-46b27f2a1239" name="Outputs" type="Block">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="-285" y="285" w="210" h="105" />
    <font family="Segoe UI" size="10" style="Regular" color="CCFFCC" />
  </stage>
  <stage stageid="26c19eae-b220-41e2-83d8-ac3293103537" name="ResultCode" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="360" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e1442ce0-f887-4b3f-9afc-17e6be7d7285" name="Bearer Token" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <display x="-135" y="105" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="cd8093ae-9f60-4e6b-bfbc-f31f8ee98538" name="Use Bearer Token" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="135" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="0a47da72-c6f3-4e80-a710-f934d1c630f3" name="Note1" type="Note">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <narrative>Force Pre Authorization - Make sure that this isn't used with Use Bearer Token. Only one Authorization header is needed.

Headers Collection - If you use Use Bearer Token, make sure that this collection doesn't contain an Authorization header.

Use Bearer Token is not configured to work using a Proxy.</narrative>
    <display x="-480" y="30" w="330" h="210" />
    <font family="Segoe UI" size="14" style="Regular" color="FF0000" />
  </stage>
  <stage stageid="f001adc6-fb62-4adc-b1f7-65b719ad6ea6" name="FileMetadata" type="Collection">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <narrative>Files to be sent in the multipart HTTP  request</narrative>
    <display x="-135" y="135" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
    <collectioninfo>
      <field name="FileName" type="text" description="Optional. Used to populate the filename header for this file's section in the multi-part form body. If a value is not specified, the filename is used from the provided filepath" />
      <field name="FieldName" type="text" description="Optional. Used to populate the name header for this file's section in the multi-part form body. If a value is not specified, the filename is set to 'file'" />
      <field name="ContentType" type="text" description="Optional. Used to populate the Content-Type header for this file's section in the multi-part form body. If a value is not specified, the mimetype of the document is used." />
      <field name="FilePath" type="text" description="The path of the file" />
    </collectioninfo>
  </stage>
  <stage stageid="62b83467-979b-4a52-a90e-a856a953fd3f" name="FieldMetadata" type="Collection">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <loginhibit />
    <narrative>Text data to be sent in the multipart HTTP  request</narrative>
    <display x="-225" y="165" w="90" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
    <collectioninfo>
      <field name="Name" type="text" description="Name of the field" />
      <field name="Value" type="text" description="Value to be set for the field" />
      <field name="ContentType" type="text" description="Optional. Used to populate the Content-Type header for this field" />
    </collectioninfo>
  </stage>
  <stage stageid="569bdaa6-7e4b-4d05-b5bc-ff806a445071" name="Allow Auto Redirects" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="195" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>True</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="95efd336-3d93-4cfd-9efe-0fae5d6ae81b" name="Maximum Redirects" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="255" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>50</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="de90ac26-44e7-4ad3-8b91-55a9582febf6" name="Allow Auto Redirects" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="225" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>True</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c5081f57-562b-429d-abde-1c154baa6826" name="Maximum Redirects" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="225" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>50</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="26021f76-0f40-42f2-83be-4623616b4060" name="Allow Auto Redirects" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="195" w="90" h="30" />
    <datatype>flag</datatype>
    <initialvalue>True</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="298f7a26-0ac5-4d44-b31c-f06ed8fa7458" name="Maximum Redirects" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="195" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>50</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="6475dcb8-adb9-4c9d-b082-6cc53cb732f6" name="Request Timeout" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-135" y="165" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>100000</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5a02b6c1-39e7-4ef4-ab0d-b1a1f128c86a" name="Request Timeout" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-240" y="135" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>100000</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="1effbf75-66b8-4089-a7b9-56d7f5644c97" name="Request Timeout" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-150" y="255" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>100000</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="2b2e57e2-cc82-46bd-9c9f-780c3261ca07" name="Request Timeout" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <display x="-165" y="75" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="86ecfacb-ce2d-4af3-9691-42c245cec896" name="Request Timeout" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-225" y="255" w="90" h="30" />
    <datatype>number</datatype>
    <initialvalue>100000</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="f3706ccf-bd8c-4906-8909-f44dd8da40bd" name="UserAgent" type="Data">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <display x="-240" y="285" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="fdedf5ea-7d21-41bd-85e9-86ea12ff4cf4" name="Note2" type="Note">
    <subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid>
    <loginhibit />
    <narrative>User Agent details can be found at
https://www.useragents.me/</narrative>
    <display x="-510" y="255" w="180" h="90" />
    <font family="Segoe UI" size="14" style="Regular" color="3366FF" />
  </stage>
  <stage stageid="d187d18f-42b3-4387-8edc-e47b7819d27c" name="Note4" type="Note">
    <loginhibit />
    <narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://portal.blueprism.com/agreements

Support URL

https://community.blueprism.com</narrative>
    <display x="240" y="-60" w="360" h="150" />
    <font family="Segoe UI" size="14" style="Regular" color="3366FF" />
  </stage>
  <stage stageid="e96218bd-a200-401f-be80-9817fd95ab62" name="UserAgent" type="Data">
    <subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid>
    <display x="-135" y="255" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="c6870fd6-3fad-4390-a2e9-6eab18e24cf0" name="UserAgent" type="Data">
    <subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid>
    <display x="-150" y="135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="5bf27639-14b2-4688-a56d-0ce974241957" name="UserAgent" type="Data">
    <subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid>
    <narrative>The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.</narrative>
    <display x="-255" y="135" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="dc1ed6e9-0795-4e1f-b868-f2b3c7de2f1f" name="UserAgent" type="Data">
    <subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid>
    <display x="-225" y="225" w="90" h="30" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
</process>